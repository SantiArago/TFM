# -*- coding: utf-8 -*-
"""WyScoutPython.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V-vMe4UVrlKumB3mFk3re1f1Hkd-y7k2
"""

import pandas as pd
import json
import requests
import time

token = "df15323ca5b4485d14d2eac235a281f221d1dde2" #cambiar token en el bucle while

partidos_deseados_inicio = 5455430
partidos_deseados_final = 5455684

mls1 = 5465309
mls2 = 5548543

from time import sleep
import random
from pandas import json_normalize

# Lista para almacenar los datos de todos los partidos
datos_totales = []

while partidos_deseados_inicio <= partidos_deseados_final:
    url = f'https://searchapi.wyscout.com/api/v2/matches/{partidos_deseados_inicio}/events.json?lang=es&skip_players=false&token={token}&groupId=1059060&subgroupId=93476'
    headers = {
        'Origin': 'https://platform.wyscout.com',
        'Accept-Language': 'es-ES,es;q=0.9',
        'Referer': 'https://platform.wyscout.com/app/',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36'
    }
    r = requests.get(url, headers=headers)
    print(f"Status code for match {partidos_deseados_inicio}: {r.status_code}")

    # Verificar si la solicitud fue exitosa
    if r.status_code == 200:
        # Convertir el contenido de la respuesta en un objeto JSON
        data = r.json()
        # Extender la lista de datos_totales con los datos del partido actual
        datos_totales.extend(data['events'])

    # Esperar un tiempo aleatorio antes de la próxima solicitud
    sleep(random.randint(1, 2))

    # Incrementar el número del partido
    partidos_deseados_inicio += 1

# Convertir la lista de datos totales en un DataFrame de pandas
df = pd.json_normalize(datos_totales)

datos_totales = []
while mls1 <= mls2:
    url = f'https://searchapi.wyscout.com/api/v2/matches/{mls1}/events.json?lang=es&skip_players=false&token={token}&groupId=1059060&subgroupId=93476'
    headers = {
        'Origin': 'https://platform.wyscout.com',
        'Accept-Language': 'es-ES,es;q=0.9',
        'Referer': 'https://platform.wyscout.com/app/',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36'
    }
    r = requests.get(url, headers=headers)
    print(f"Status code for match {mls1}: {r.status_code}")

    # Verificar si la solicitud fue exitosa
    if r.status_code == 200:
        # Convertir el contenido de la respuesta en un objeto JSON
        data = r.json()
        # Extender la lista de datos_totales con los datos del partido actual
        datos_totales.extend(data['events'])

    # Esperar un tiempo aleatorio antes de la próxima solicitud
    sleep(random.randint(1, 2))

    # Incrementar el número del partido
    mls1 += 1

#Exportar datos
df.to_csv('ligaMX23-24.csv', index=False)

df.shape

df.head(20)